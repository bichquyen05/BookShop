@model IEnumerable<BookShop.Models.Category>
@{
    ViewData["Title"] = "CategoryList";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var bookCountsByCategory = ViewData["bookCounts"] as Dictionary<string, int>;
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div id="message" class="alert alert-danger">@TempData["Message"]</div>
}

<div class="col-lg-8 grid-margin-center stretch-card-center">
    <div class="card">
        <div class="card-body">
            <div class="d-flex flex-row justify-content-between">
                <h4 class="card-title mb-1">Category List</h4>
                <p>
                    <a type="button" asp-action="Create" class="btn btn-outline-primary btn-icon-text">
                        <i class="mdi mdi-plus-circle-outline"></i> Create New
                    </a>
                </p>
            </div>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model=>model.Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th> 
                            <th>Quantity</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="py-1">
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td class="py-1">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td style="text-align:center;">@(bookCountsByCategory.ContainsKey(item.Name) ? bookCountsByCategory[item.Name] : 0)</td>
                                <td>
                                    <a type="button" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-success btn-icon-text">
                                        <i class="mdi mdi-alert btn-icon-prepend"></i> Edit
                                    </a>
                                    <a type="button" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-icon-text">
                                        <i class="mdi mdi-delete-forever"></i> Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    // Ẩn thông báo sau 10 giây
    setTimeout(function () {
        document.getElementById('message').style.display = 'none';
    }, 10000);
</script>